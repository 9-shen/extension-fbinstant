local dirtylarry = require "gooey.themes.dirtylarry.dirtylarry"
local json = require "fbinstant.utils.json"
local prettify = require "apitester.prettify"
local monarch = require "monarch.monarch"
local popup = require "apitester.popup.popup"


function init(self)
	print("init")
	msg.post(".", "acquire_input_focus")
	msg.post("#", "update_stores")
	self.stores = {}
	dirtylarry.dynamic_list("store_list", self.stores)
	dirtylarry.button("save_store_data").set_visible(false)
	dirtylarry.button("increment_store_data").set_visible(false)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("update_stores") then
		fbinstant.get_stores(function(self, stores)
			self.stores = json.decode(stores)
			for i,store in pairs(self.stores) do
				local text = ("%s (%s) %s"):format(store.name, store.id, store.status)
				self.stores[i] = setmetatable(store, { __tostring = function() return text end})
			end
			dirtylarry.dynamic_list("store_list", self.stores)
		end)
	elseif message_id == hash("update_storedata") then
		local keys = { "foo", "bar" }
		fbinstant.get_store_data(message.name, json.encode(keys), function(self, data)
			gui.set_text(gui.get_node("store_data"), prettify(json.decode(data)))
		end)
	end
end

function on_input(self, action_id, action)
	dirtylarry.button("back", action_id, action, function()
		monarch.back()
	end)

	self.store_name = dirtylarry.input("store_name", gui.KEYBOARD_TYPE_DEFAULT, action_id, action).text

	dirtylarry.button("create_store", action_id, action, function()
		if not self.store_name or self.store_name == "" then
			popup.show("You must enter a store name to create")
		else
			fbinstant.create_store(self.store_name, function(self, store_id)
				popup.success_check(store_id, "Created store " .. store_id, "Failed to create store")
				msg.post("#", "update_stores")
			end)
		end
	end)
	dirtylarry.button("close_store", action_id, action, function()
		if not self.selected_store then
			popup.show("You must select a store to close")
		else
			fbinstant.close_store(self.selected_store.name, function(self, success)
				popup.success_check(success, "Closed store", "Failed to create store")
				msg.post("#", "update_stores")
			end)
		end
	end)
	
	dirtylarry.button("save_store_data", action_id, action, function()
		local data = {
			foo = 123,
			bar = 567
		}
		fbinstant.save_store_data(self.selected_store.name, json.encode(data), function(self, success)
			popup.success_check(success, "Saved store data", "Failed to save store data")
			msg.post("#", "update_storedata", { name = self.selected_store.name })
		end)
	end)

	dirtylarry.button("increment_store_data", action_id, action, function()
		local data = {
			foo = math.random(1,5),
			bar = math.random(1,5)
		}
		fbinstant.increment_store_data(self.selected_store.name, json.encode(data), function(self, data)
			msg.post("#", "update_storedata", { name = self.selected_store.name })
		end)
	end)
		
	dirtylarry.dynamic_list("store_list", self.stores, action_id, action, function(list)
		if list.selected_item then
			local item = list.items[list.selected_item]
			local data = item.data
			self.selected_store = data
			dirtylarry.button("save_store_data").set_visible(true)
			dirtylarry.button("increment_store_data").set_visible(true)
			msg.post("#", "update_storedata", { name = data.name })
		end
	end)
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
